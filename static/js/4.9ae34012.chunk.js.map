{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","hoc/withAuthRedirect.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","assets/images/avatar.jpg","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createField","name","placeholder","component","validate","text","required","value","maxLengthCreator","maxLength","length","minLengthCreator","minLength","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","event","currentTarget","autoFocus","onBlur","updateUserStatusThunkCreator","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","onSubmit","style","formSummaryError","type","keys","contacts","map","key","contact","Contact","contactName","contactValue","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo","saveAvatarThunkCreator","saveProfileThunkCreator","Preloader","descriptionBlock","src","photos","large","userPhoto","mainPhoto","alt","target","files","initialValues","formData","then","Post","classes","item","message","likes","Posts","memo","postsElements","posts","post","likesCount","id","maxLength10","minLength2","AddNewPostFormRedux","Field","postsBlock","values","addPost","newPostText","PostsContainer","profilePage","postsData","dispatch","addPostActionCreator","Profile","content","store","ProfileContainer","userId","match","params","loggedUserId","history","getProfileInfoThunkCreator","getUserStatusThunkCreator","refreshProfile","prevProps","compose","withRouter"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,+LCG9GC,EAAc,SAAC,GAA8C,EAA7CC,MAA8C,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SAEpDC,EAAWH,GAAWC,EAE5B,OACE,yBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,MACpE,6BACGC,GAEDC,GAAY,8BAAOF,KAKdM,EAAW,SAAAC,GAAU,IACzBV,EAAoCU,EAApCV,MAAuBW,GAAaD,EAA7BT,KAA6BS,EAAvBE,MADW,YACYF,EADZ,2BAE/B,OAAO,kBAACX,EAAgBW,EAAO,8CAAcV,EAAWW,MAG7CE,EAAQ,SAAAH,GAAU,IACtBV,EAAoCU,EAApCV,MAAuBW,GAAaD,EAA7BT,KAA6BS,EAAvBE,MADQ,YACeF,EADf,2BAE5B,OAAO,kBAACX,EAAgBW,EAAO,2CAAWV,EAAWW,MAG1CG,EAAc,SAACC,EAAMC,EAAaC,EAAWC,GAAqC,IAA3BR,EAA0B,uDAAlB,GAAIS,EAAc,uDAAP,GACrF,OACE,6BACE,kBAAC,IAAD,eAAOJ,KAAMA,EACXC,YAAaA,EACbC,UAAWA,EACXC,SAAUA,GACNR,IACHS,K,iCCpCT,sGAAO,IAAMC,EAAW,SAAAC,GACtB,IAAIA,EACJ,MAAO,qBAGIC,EAAmB,SAAAC,GAAS,OAAI,SAAAF,GAC3C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,cAInBE,EAAmB,SAAAC,GAAS,OAAI,SAAAL,GAC3C,GAAIA,EAAMG,OAASE,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,sICP5BC,EAA6B,SAACC,GAChC,MAAO,CACNC,OAAQD,EAAME,KAAKD,SAITE,EAAmB,SAACC,GAAe,IACxCC,EADuC,uKAGzC,OAAKC,KAAKxB,MAAMmB,OACT,kBAACG,EAAcE,KAAKxB,OADI,kBAAC,IAAD,CAAUyB,GAAG,eAHH,GACbC,IAAMJ,WAStC,OAFqCK,YAAQV,EAARU,CAAoCJ,K,+ECd5D,SAASK,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAG9B,QAETmB,GAAKM,EAAKtB,SAAWgB,GAH8CO,GAAK,IAK9E,MAAOS,GACPR,GAAK,EACLC,EAAKO,EACL,QACA,IACOT,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAiB,EAAA,GAA2BlB,EAAKC,IGLjF,WACb,MAAM,IAAIkB,UAAU,6IHIgF,K,oBILtG7D,EAAOC,QAAU,IAA0B,oC,oBCC3CD,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,QAAU,6BAA6B,UAAY,+BAA+B,QAAU,+B,oBCAvKD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,2B,oBCA/DD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,WAAa,4B,oBCA5DD,EAAOC,QAAU,CAAC,KAAO,qB,gKCoDV6D,EAhDO,SAACjD,GAAU,MAKDkD,oBAAS,GALR,mBAK1BC,EAL0B,KAKhBC,EALgB,OAMLF,mBAASlD,EAAMqD,QANV,mBAM1BA,EAN0B,KAMlBC,EANkB,KAQ/BC,qBAAU,WAAOD,EAAUtD,EAAMqD,UAAU,CAACrD,EAAMqD,SAelD,OACE,8BACIF,GACA,6BACE,uCACA,0BAAMK,cAlBW,WACvBJ,GAAY,KAkBHpD,EAAMqD,QAAU,cAKtBF,GACC,6BACE,2BACEM,SAlBa,SAACC,GACtBJ,EAAUI,EAAMC,cAAchD,QAkBtBiD,WAAW,EACXC,OAzBiB,WACzBT,GAAY,GACZpD,EAAM8D,6BAA6BT,IAwB3B1C,MAAO0C,O,sDCCJU,EAFkBC,YAAU,CAACC,KAAM,YAAjBD,EApCT,SAAC,GAAoC,IAAnCE,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,QAAS1E,EAAW,EAAXA,MAC/C,OACA,0BAAM2E,SAAUF,GACd,wCAECzE,GAAS,yBAAKG,UAAWyE,IAAMC,kBAAmB7E,GAEnD,6BACG,0CADH,IACuBW,YAAY,WAAY,YAAaD,IAAO,KAGnE,6BACE,kDADF,IAC8BC,YAAY,iBAAkB,GAAID,IAAO,GAAI,CAACoE,KAAM,cAGlF,6BACE,uDADF,IACmCnE,YAAY,4BAA6B,yBAA0BL,IAAU,KAGhH,6BACE,yCADF,IACqBK,YAAY,UAAW,WAAYL,IAAU,KAGlE,6BACE,wCADF,IACoBoC,OAAOqC,KAAKL,EAAQM,UAAUC,KAAI,SAAAC,GAClD,OACE,yBAAKA,IAAKA,EAAK/E,UAAWC,IAAO+E,SAC/B,2BAAID,EAAJ,MADF,IACkBvE,YAAY,YAAcuE,EAAKA,EAAK5E,IAAU,aC2BpE8E,EAAU,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAC7B,OACE,yBAAKnF,UAAWC,IAAO+E,SAAS,2BAAIE,GAApC,KAAuDC,IAIrDC,EAAc,SAAC,GAAsC,IAArCb,EAAoC,EAApCA,QAASc,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aACtC,OACE,6BACGD,GAAW,6BAAK,4BAAQE,QAASD,GAAjB,SACjB,6BACE,0CADF,IACsBf,EAAQiB,UAG9B,6BACE,kDADF,IAC8BjB,EAAQkB,eAAiB,MAAQ,MAG9DlB,EAAQkB,gBACT,6BACE,uDADF,IACmClB,EAAQmB,2BAG3C,6BACE,yCADF,IACqBnB,EAAQoB,SAG7B,6BACA,wCADA,IACkBpD,OAAOqC,KAAKL,EAAQM,UAAUC,KAAI,SAAAC,GAClD,OAAO,kBAAC,EAAD,CAASA,IAAKA,EAAKG,YAAaH,EAAKI,aAAcZ,EAAQM,SAASE,WAOpEa,EA1FK,SAAC,GAA+G,IAA9GrB,EAA6G,EAA7GA,QAASd,EAAoG,EAApGA,OAAQS,EAA4F,EAA5FA,6BAA8BmB,EAA8D,EAA9DA,QAASQ,EAAqD,EAArDA,uBAAwBC,EAA6B,EAA7BA,wBAA6B,EAEnGxC,oBAAS,GAF0F,mBAE5HC,EAF4H,KAElHC,EAFkH,KAYjI,IAAKe,EACH,OAAO,kBAACwB,EAAA,EAAD,MAgBT,OACE,6BACE,yBAAK/F,UAAWC,IAAO+F,kBACrB,yBAAKC,IAAK1B,EAAQ2B,OAAOC,OAASC,IAAWpG,UAAWC,IAAOoG,UAAWC,IAAI,mBAC5EjB,GAAW,2BAAOV,KAAM,OAAQd,SAjBf,SAACC,GACpBA,EAAMyC,OAAOC,MAAMtF,QACrB2E,EAAuB/B,EAAMyC,OAAOC,MAAM,OAiBvCjD,EACG,kBAAC,EAAD,CACEkD,cAAelC,EACfA,QAASA,EACTC,SAjBK,SAACkC,GAChBZ,EAAwBY,GACrBC,MAAK,WAfRnD,GAAY,SAgCJ,kBAAC,EAAD,CACE8B,aAAc,WArCxB9B,GAAY,IAsCFe,QAASA,EACTc,QAASA,IAIf,kBAAC,EAAD,CAAe5B,OAAQA,EAAQS,6BAA8BA,O,oCCtCtD0C,EAfF,SAACxG,GACZ,OACE,yBAAKJ,UAAW6G,IAAQC,MACtB,yBACEb,IAAI,GACJK,IAAI,WAELlG,EAAM2G,QACP,6BACE,8BAAO3G,EAAM4G,U,kBC6CNC,EAlDDnF,IAAMoF,MAAK,SAAC9G,GAExB,IAAI+G,EAAgB/G,EAAMgH,MAAMtC,KAC9B,SAACuC,GAAD,OAAU,kBAAC,EAAD,CACRN,QAASM,EAAKxG,KACdmG,MAAOK,EAAKC,WACZvC,IAAKsC,EAAKE,QAQVC,EAAcxG,YAAiB,IAC/ByG,EAAatG,YAAiB,GAoB7BuG,EAAsBtD,YAAU,CAACC,KAAM,yBAAjBD,EAlBN,SAAChE,GACpB,OACE,0BAAMoE,SAAUpE,EAAMkE,cACpB,6BACE,kBAACqD,EAAA,EAAD,CACEhH,UAAWR,IACXM,KAAK,cACLC,YAAY,gBACZE,SAAU,CAACE,IAAU0G,EAAaC,MAGtC,6BACE,iDAQR,OACE,yBAAKzH,UAAW6G,IAAQe,YACtB,wCAEA,kBAACF,EAAD,CAAqBlD,SA/BP,SAACqD,GACjBzH,EAAM0H,QAAQD,EAAOE,gBAgCnB,yBAAK/H,UAAW6G,IAAQO,OACrBD,O,QC3BMa,EAFQjG,aAfD,SAACT,GACrB,MAAO,CACL8F,MAAO9F,EAAM2G,YAAYC,UACzBH,YAAazG,EAAM2G,YAAYF,gBAIV,SAACI,GACxB,MAAO,CACLL,QAAS,SAACC,GACVI,EAASC,YAAqBL,QAKXhG,CAA6CkF,GCCrDoB,EAjBC,SAACjI,GAEf,OACE,0BAAMJ,UAAW6G,IAAQyB,SACrB,kBAAC,EAAD,CACE/D,QAASnE,EAAMmE,QACfd,OAAQrD,EAAMqD,OACdqC,wBAAyB1F,EAAM0F,wBAC/B5B,6BAA8B9D,EAAM8D,6BACpCmB,QAASjF,EAAMiF,QACfQ,uBAAwBzF,EAAMyF,yBAEhC,kBAAC,EAAD,CAAgB0C,MAAOnI,EAAMmI,U,iBCF/BC,E,+KAGF,IAAIC,EAAS7G,KAAKxB,MAAMsI,MAAMC,OAAOF,OAEhCA,IACHA,EAAS7G,KAAKxB,MAAMwI,eAElBhH,KAAKxB,MAAMyI,QAAQ5F,KAAK,UAG5BrB,KAAKxB,MAAM0I,2BAA2BL,GACtC7G,KAAKxB,MAAM2I,0BAA0BN,K,0CAIrC7G,KAAKoH,mB,yCAGYC,GACdrH,KAAKxB,MAAMsI,MAAMC,OAAOF,SAAWQ,EAAUP,MAAMC,OAAOF,QAC3D7G,KAAKoH,mB,+BAKP,OACE,kBAAC,EAAD,iBACMpH,KAAKxB,MADX,CAEEiF,SAAUzD,KAAKxB,MAAMsI,MAAMC,OAAOF,OAClClE,QAAS3C,KAAKxB,MAAMmE,QACpBd,OAAQ7B,KAAKxB,MAAMqD,OACnBS,6BAA8BtC,KAAKxB,MAAM8D,6BACzC2B,uBAAwBjE,KAAKxB,MAAMyF,8B,GAjCZ/D,IAAMJ,WAwDtBwH,sBACbnH,aAdoB,SAACT,GACrB,MAAO,CACLiD,QAASjD,EAAM2G,YAAY1D,QAC3Bd,OAAQnC,EAAM2G,YAAYxE,OAC1BmF,aAActH,EAAME,KAAKiH,OACzBlH,OAAQD,EAAME,KAAKD,UASI,CACvBuH,+BACAC,8BACA7E,iCACA2B,2BACAC,8BAEFqD,IACA1H,IATayH,CAUbV","file":"static/js/4.9ae34012.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__168z0\",\"error\":\"FormsControls_error__9ujUt\",\"formSummaryError\":\"FormsControls_formSummaryError__2ZOxo\"};","import React from 'react'\r\nimport { Field } from 'redux-form'\r\nimport styles from './FormsControls.module.css'\r\n\r\nexport const FormControl = ({input, meta: {touched, error}, children}) => {\r\n\r\n  const hasError = touched && error\r\n\r\n  return (\r\n    <div className={styles.formControl + ' ' + (hasError ? styles.error : ' ')}>\r\n      <div>\r\n        {children}\r\n      </div>\r\n      { hasError && <span>{error}</span> }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea = props => {\r\n  const {input, meta, child, ...restProps} = props\r\n  return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = props => {\r\n  const {input, meta, child, ...restProps} = props\r\n  return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (name, placeholder, component, validate, props = {}, text = '') => {\r\n  return (\r\n    <div>\r\n      <Field name={name} \r\n        placeholder={placeholder} \r\n        component={component} \r\n        validate={validate}\r\n        {...props}\r\n      />{text}\r\n    </div>\r\n  )\r\n}","export const required = value => {\r\n  if (value) return undefined\r\n  return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n  return undefined\r\n}\r\n\r\nexport const minLengthCreator = minLength => value => {\r\n  if (value.length < minLength) return `Max length is ${minLength} symbols`\r\n  return undefined\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n   isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to='/login' />\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent\r\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = __webpack_public_path__ + \"static/media/avatar.04d7a14c.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cRNX\",\"backPic\":\"ProfileInfo_backPic__2eYeK\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3UV_d\",\"contact\":\"ProfileInfo_contact__3_xUl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__3WhbD\",\"backPic\":\"Profile_backPic__3su4L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__phqqx\",\"postsBlock\":\"Posts_postsBlock__1zy2N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1yJRf\"};","import React, { useState, useEffect } from \"react\";\r\n\r\n// import classes from './ProfileInfo.module.css'\r\n// import Preloader from '../../common/Preloader/Preloader';\r\n\r\nconst ProfileStatus = (props) => {\r\n  // let stateWithSetState = useState(false)\r\n  // let editMode = stateWithSetState[0]\r\n  // let setEditMode = stateWithSetState[1]\r\n  //деструктуризация\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect(() => {setStatus(props.status)}, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateUserStatusThunkCreator(status)\r\n  }\r\n\r\n  const onStatusChange = (event) => {\r\n    setStatus(event.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <b>Status: </b> \r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"No status\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileStatus\r\n","import React from 'react';\r\nimport {createField, Input, Textarea} from '../../common/FormsControls/FormsControls'\r\nimport { reduxForm } from 'redux-form';\r\n\r\nimport styles from './ProfileInfo.module.css'\r\n\r\nimport style from '../../common/FormsControls/FormsControls.module.css'\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n  return (\r\n  <form onSubmit={handleSubmit}>\r\n    <button>save</button>\r\n\r\n    {error && <div className={style.formSummaryError}>{error}</div>}\r\n\r\n    <div>\r\n       <b>Full name: </b> {createField('fullName', 'full name', Input, [])}\r\n    </div>\r\n\r\n    <div>\r\n      <b>Looking for a job: </b> {createField('lookingForAJob', '', Input, [], {type: 'checkbox'})}\r\n    </div>\r\n\r\n    <div>\r\n      <b>My professional skills: </b> {createField('lookingForAJobDescription', 'my professional skills', Textarea, [])}\r\n    </div>\r\n\r\n    <div>\r\n      <b>About me: </b> {createField('aboutMe', 'about me', Textarea, [])}\r\n    </div>\r\n\r\n    <div>\r\n      <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n        return (\r\n          <div key={key} className={styles.contact}>\r\n            <b>{key}: </b> {createField('contacts.' + key, key, Textarea, [])}\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  </form>\r\n  )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'contacts'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, {useState} from 'react';\r\nimport styles from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport userPhoto from '../../../assets/images/avatar.jpg'\r\nimport ProfileDataFormReduxForm from './ProfileDataForm';\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatusThunkCreator, isOwner, saveAvatarThunkCreator, saveProfileThunkCreator}) => {\r\n\r\n  let [editMode, setEditMode] = useState(false)\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n  }\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onAvatarSelected = (event) => {\r\n    if (event.target.files.length) {\r\n      saveAvatarThunkCreator(event.target.files[0])\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfileThunkCreator(formData)\r\n      .then(() => {\r\n        deactivateEditMode()\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.descriptionBlock}>\r\n        <img src={profile.photos.large || userPhoto} className={styles.mainPhoto} alt=\"profile-avatar\"/>\r\n        { isOwner && <input type={'file'} onChange={onAvatarSelected}/> }\r\n\r\n        {editMode \r\n          ? <ProfileDataFormReduxForm \r\n              initialValues={profile} \r\n              profile={profile} \r\n              onSubmit={onSubmit} \r\n            /> \r\n          : <ProfileData \r\n              goToEditMode={() => {activateEditMode()}} \r\n              profile={profile} \r\n              isOwner={isOwner}\r\n            />\r\n        }\r\n\r\n        <ProfileStatus status={status} updateUserStatusThunkCreator={updateUserStatusThunkCreator}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Contact = ({contactName, contactValue}) => {\r\n  return (\r\n    <div className={styles.contact}><b>{contactName}</b>: {contactValue}</div>\r\n  )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n  return (\r\n    <div>\r\n      {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n      <div>\r\n        <b>Full name: </b> {profile.fullName}\r\n      </div>\r\n\r\n      <div>\r\n        <b>Looking for a job: </b> {profile.lookingForAJob ? 'yes' : 'no'}\r\n      </div>\r\n\r\n      {profile.lookingForAJob &&\r\n      <div>\r\n        <b>My professional skills: </b> {profile.lookingForAJobDescription}\r\n      </div>}\r\n      \r\n      <div>\r\n        <b>About me: </b> {profile.aboutMe}\r\n      </div>\r\n\r\n      <div>\r\n      <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n        return <Contact key={key} contactName={key} contactValue={profile.contacts[key]}/>\r\n      })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img\r\n        src=\"\"\r\n        alt=\"avatar\"\r\n      />\r\n      {props.message}\r\n      <div>\r\n        <span>{props.likes}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport classes from './Posts.module.css';\r\nimport Post from './Post/Post'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator, minLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst Posts = React.memo((props) => {\r\n\r\n  let postsElements = props.posts.map(\r\n    (post) => <Post \r\n      message={post.text} \r\n      likes={post.likesCount}\r\n      key={post.id}\r\n    />\r\n  )\r\n\r\n  const onAddPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  let maxLength10 = maxLengthCreator(10)\r\n  let minLength2 = minLengthCreator(2)\r\n\r\n  let AddNewPostForm = (props) => {\r\n    return (\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <Field \r\n            component={Textarea}\r\n            name='newPostText'\r\n            placeholder=\"Enter here...\" \r\n            validate={[required, maxLength10, minLength2]}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button>Add post</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\n const AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\n  return (\r\n    <div className={classes.postsBlock}>\r\n      <h3>my posts</h3>\r\n    \r\n      <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n         \r\n      <div className={classes.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Posts;","// import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Posts from './Posts'\r\n\r\nimport {addPostActionCreator} from '../../../redux/profile-reducer'\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.postsData,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n    dispatch(addPostActionCreator(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts)\r\n\r\nexport default PostsContainer","import React from 'react';\r\nimport classes from './Profile.module.css'\r\n\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport PostsContainer from './Posts/PostsContainer'\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <main className={classes.content}>\r\n        <ProfileInfo \r\n          profile={props.profile} \r\n          status={props.status} \r\n          saveProfileThunkCreator={props.saveProfileThunkCreator}\r\n          updateUserStatusThunkCreator={props.updateUserStatusThunkCreator}\r\n          isOwner={props.isOwner}\r\n          saveAvatarThunkCreator={props.saveAvatarThunkCreator}\r\n        />\r\n        <PostsContainer store={props.store} />\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport Profile from './Profile'\r\nimport {\r\n  getProfileInfoThunkCreator,\r\n  getUserStatusThunkCreator,\r\n  updateUserStatusThunkCreator,\r\n  saveAvatarThunkCreator,\r\n  saveProfileThunkCreator\r\n} from '../../redux/profile-reducer'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId\r\n    //my id 9293\r\n    if (!userId) {\r\n      userId = this.props.loggedUserId\r\n      if (!userId) {\r\n        this.props.history.push('/login')\r\n      } \r\n    }\r\n    this.props.getProfileInfoThunkCreator(userId)\r\n    this.props.getUserStatusThunkCreator(userId)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile \r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateUserStatusThunkCreator={this.props.updateUserStatusThunkCreator}\r\n        saveAvatarThunkCreator={this.props.saveAvatarThunkCreator}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\n//hoc\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    loggedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\n// const UrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\n// export default connect(mapStateToProps, {getProfileInfoThunkCreator})(UrlDataContainerComponent)\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getProfileInfoThunkCreator, \r\n    getUserStatusThunkCreator, \r\n    updateUserStatusThunkCreator,\r\n    saveAvatarThunkCreator,\r\n    saveProfileThunkCreator\r\n  }),//3\r\n  withRouter,//2\r\n  withAuthRedirect//1 Обертка\r\n)(ProfileContainer) \r\n\r\n"],"sourceRoot":""}