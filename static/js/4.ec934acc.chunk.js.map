{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","hoc/withAuthRedirect.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","minLengthCreator","minLength","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createField","name","placeholder","component","validate","text","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","event","currentTarget","autoFocus","onBlur","updateUserStatusThunkCreator","ProfileInfo","profile","classes","descriptionBlock","src","photos","large","alt","Preloader","Post","item","message","likes","Posts","memo","postsElements","posts","map","post","likesCount","key","id","maxLength10","minLength2","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","postsBlock","values","addPost","newPostText","PostsContainer","profilePage","postsData","dispatch","addPostActionCreator","Profile","content","store","ProfileContainer","userId","match","params","loggedUserId","getProfileInfoThunkCreator","getUserStatusThunkCreator","compose","withRouter"],"mappings":"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","file":"static/js/4.ec934acc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__168z0\",\"error\":\"FormsControls_error__9ujUt\",\"formSummaryError\":\"FormsControls_formSummaryError__2ZOxo\"};","export const required = value => {\r\n  if (value) return undefined\r\n  return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n  return undefined\r\n}\r\n\r\nexport const minLengthCreator = minLength => value => {\r\n  if (value.length < minLength) return `Max length is ${minLength} symbols`\r\n  return undefined\r\n}","import React from 'react'\r\nimport { Field } from 'redux-form'\r\nimport styles from './FormsControls.module.css'\r\n\r\nexport const FormControl = ({input, meta: {touched, error}, children}) => {\r\n\r\n  const hasError = touched && error\r\n\r\n  return (\r\n    <div className={styles.formControl + ' ' + (hasError ? styles.error : ' ')}>\r\n      <div>\r\n        {children}\r\n      </div>\r\n      { hasError && <span>{error}</span> }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea = props => {\r\n  const {input, meta, child, ...restProps} = props\r\n  return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = props => {\r\n  const {input, meta, child, ...restProps} = props\r\n  return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (name, placeholder, component, validate, props = {}, text = '') => {\r\n  return (\r\n    <div>\r\n      <Field name={name} \r\n        placeholder={placeholder} \r\n        component={component} \r\n        validate={validate}\r\n        {...props}\r\n      />{text}\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n   isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to='/login' />\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent\r\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__3WhbD\",\"backPic\":\"Profile_backPic__3su4L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cRNX\",\"backPic\":\"ProfileInfo_backPic__2eYeK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__phqqx\",\"postsBlock\":\"Posts_postsBlock__1zy2N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1yJRf\"};","import React, { useState, useEffect } from \"react\";\r\n\r\n// import classes from './ProfileInfo.module.css'\r\n// import Preloader from '../../common/Preloader/Preloader';\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n  // let stateWithSetState = useState(false)\r\n  // let editMode = stateWithSetState[0]\r\n  // let setEditMode = stateWithSetState[1]\r\n  //деструктуризация\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect(() => {setStatus(props.status)}, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateUserStatusThunkCreator(status)\r\n  }\r\n\r\n  const onStatusChange = (event) => {\r\n      setStatus(event.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"No status\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileStatus\r\n","import React from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatusThunkCreator}) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={classes.descriptionBlock}>\r\n        <img src={profile.photos.large} alt=\"profile-avatar\"/>\r\n        <ProfileStatus status={status} updateUserStatusThunkCreator={updateUserStatusThunkCreator}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img\r\n        src=\"\"\r\n        alt=\"avatar\"\r\n      />\r\n      {props.message}\r\n      <div>\r\n        <span>{props.likes}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport classes from './Posts.module.css';\r\nimport Post from './Post/Post'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator, minLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst Posts = React.memo((props) => {\r\n\r\n  let postsElements = props.posts.map(\r\n    (post) => <Post \r\n      message={post.text} \r\n      likes={post.likesCount}\r\n      key={post.id}\r\n    />\r\n  )\r\n\r\n  const onAddPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  let maxLength10 = maxLengthCreator(10)\r\n  let minLength2 = minLengthCreator(2)\r\n\r\n  let AddNewPostForm = (props) => {\r\n    return (\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <Field \r\n            component={Textarea}\r\n            name='newPostText'\r\n            placeholder=\"Enter here...\" \r\n            validate={[required, maxLength10, minLength2]}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button>Add post</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\n const AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\n  return (\r\n    <div className={classes.postsBlock}>\r\n      <h3>my posts</h3>\r\n    \r\n      <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n         \r\n      <div className={classes.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Posts;","// import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Posts from './Posts'\r\n\r\nimport {addPostActionCreator} from '../../../redux/profile-reducer'\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.postsData,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n    dispatch(addPostActionCreator(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts)\r\n\r\nexport default PostsContainer","import React from 'react';\r\nimport classes from './Profile.module.css'\r\n\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport PostsContainer from './Posts/PostsContainer'\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <main className={classes.content}>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateUserStatusThunkCreator={props.updateUserStatusThunkCreator}/>\r\n        <PostsContainer store={props.store} />\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport Profile from './Profile'\r\nimport {\r\n  getProfileInfoThunkCreator,\r\n  getUserStatusThunkCreator,\r\n  updateUserStatusThunkCreator\r\n} from '../../redux/profile-reducer'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId\r\n    //my id 9293\r\n    if (!userId) {\r\n      userId = this.props.loggedUserId\r\n      // if (!userId) {this.props.history.push('/login')}\r\n    }\r\n    this.props.getProfileInfoThunkCreator(userId)\r\n    this.props.getUserStatusThunkCreator(userId)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile \r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateUserStatusThunkCreator={this.props.updateUserStatusThunkCreator}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\n//hoc\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n   profile: state.profilePage.profile,\r\n   status: state.profilePage.status,\r\n   loggedUserId: state.auth.userId,\r\n   isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\n// const UrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\n// export default connect(mapStateToProps, {getProfileInfoThunkCreator})(UrlDataContainerComponent)\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getProfileInfoThunkCreator, \r\n    getUserStatusThunkCreator, \r\n    updateUserStatusThunkCreator\r\n  }),//3\r\n  withRouter,//2\r\n  withAuthRedirect//1 Обертка\r\n)(ProfileContainer) \r\n\r\n"],"sourceRoot":""}