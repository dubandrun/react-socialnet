{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createField","name","placeholder","component","validate","text","required","value","maxLengthCreator","maxLength","length","minLengthCreator","minLength","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","DialogItem","path","id","classes","dialog","active","avatar","src","alt","Message","message","Dialogs","dialogsPage","dialogsElements","dialogsData","map","key","messagesElements","messagesData","maxLength100","minLength1","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","dialogs","dialogItems","messages","values","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator"],"mappings":"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","file":"static/js/6.dfbbc7c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__168z0\",\"error\":\"FormsControls_error__9ujUt\",\"formSummaryError\":\"FormsControls_formSummaryError__2ZOxo\"};","import React from 'react'\r\nimport { Field } from 'redux-form'\r\n\r\nimport styles from './FormsControls.module.css'\r\n\r\nexport const FormControl = ({input, meta: {touched, error}, children}) => {\r\n  const hasError = touched && error\r\n\r\n  return (\r\n    <div className={styles.formControl + ' ' + (hasError ? styles.error : ' ')}>\r\n      <div>\r\n        {children}\r\n      </div>\r\n      { hasError && <span>{error}</span> }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea = props => {\r\n  const {input, meta, child, ...restProps} = props\r\n  return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = props => {\r\n  const {input, meta, child, ...restProps} = props\r\n  return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (name, placeholder, component, validate, props = {}, text = '') => {\r\n  return (\r\n    <div>\r\n      <Field name={name} \r\n        placeholder={placeholder} \r\n        component={component} \r\n        validate={validate}\r\n        {...props}\r\n      />{text}\r\n    </div>\r\n  )\r\n}","export const required = value => {\r\n  if (value) return undefined\r\n  return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n  return undefined\r\n}\r\n\r\nexport const minLengthCreator = minLength => value => {\r\n  if (value.length < minLength) return `Max length is ${minLength} symbols`\r\n  return undefined\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n   isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to='/login' />\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Eugo\",\"dialogItems\":\"Dialogs_dialogItems__3iWIK\",\"dialog\":\"Dialogs_dialog__4A9hW\",\"active\":\"Dialogs_active__2mF2H\",\"messages\":\"Dialogs_messages__9QUh8\",\"message\":\"Dialogs_message___A33G\",\"avatar\":\"Dialogs_avatar__up3Ta\"};","import React from \"react\";\r\n\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport classes from './../Dialogs.module.css'\r\n\r\nconst DialogItem = (props) => {\r\n  const path = '/dialogs/' + props.id\r\n  return (\r\n    <div className={classes.dialog + ' ' + classes.active}>\r\n      <NavLink to={path}>\r\n        <div >\r\n          <img className={classes.avatar} src={props.avatar} alt=\"avatar\"/>\r\n          {props.name}\r\n        </div>\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\"\r\n\r\nimport classes from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n  return (\r\n  <div className={classes.message}>{props.text}</div>\r\n  )\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\n\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nimport { required, maxLengthCreator, minLengthCreator } from \"../../utils/validators/validators\";\r\n\r\nimport classes from './Dialogs.module.css'\r\n\r\nconst Dialogs = (props) => {\r\n  const state = props.dialogsPage\r\n  const dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} avatar={dialog.avatar}/>)\r\n  const messagesElements = state.messagesData.map(message => <Message text={message.text} key={message.id}/>)\r\n  const maxLength100 = maxLengthCreator(100)\r\n  const minLength1 = minLengthCreator(1)\r\n\r\n  const AddMessageForm = (props) => {\r\n    return (\r\n      <form onSubmit={props.handleSubmit}>\r\n        <Field \r\n          name='newMessageBody'\r\n          component={Textarea}\r\n          placeholder='Enter your message here'\r\n          validate={[required, maxLength100, minLength1]} \r\n        />\r\n        <div>\r\n          <button>Enter</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\n  const AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n  const addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody)\r\n  }\r\n\r\n  if (!props.isAuth) return <Redirect to='/login' />\r\n\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogItems}>\r\n       {dialogsElements}\r\n      </div>\r\n      \r\n      <div className={classes.messages}>\r\n        {messagesElements}\r\n      </div>\r\n      <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs;\r\n","// import React from \"react\";\r\nimport { connect } from \"react-redux\"\r\nimport { compose } from \"redux\"\r\n\r\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\"\r\n\r\nimport Dialogs from './Dialogs'\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\"\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n    dispatch(sendMessageCreator(newMessageBody))\r\n  }\r\n  }\r\n}\r\n\r\n// const AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect// вызовется 1ой, примет Dialogs. Результат этого пойдет в connect.\r\n)(Dialogs) \r\n\r\n\r\n\r\n"],"sourceRoot":""}